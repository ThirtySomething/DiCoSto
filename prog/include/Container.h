#pragma once

#include "Defines.h"
#include <fstream>
#include <iostream>

namespace net {
    namespace derpaul {
        namespace dicosto {
            class Container {
            public:
                // *****************************************************************************
                Container(const std::string& containerName);
                // *****************************************************************************
                Container(void);
                // *****************************************************************************
                ~Container(void);
                // *****************************************************************************
                const bool containerExist(void) const;
                // *****************************************************************************
                bool containerInit(void);
                // *****************************************************************************
                bool containerMount(void);
                // *****************************************************************************
                bool containerIsMounted(void);
                // *****************************************************************************
                std::string containerNameGet(void) const;
                // *****************************************************************************
                bool containerRename(const std::string& containerName);
                // *****************************************************************************
                unsigned long long containerSizeGet(void) const;
                // *****************************************************************************
                bool containerSizeSet(const unsigned long long& containerSize);
                // *****************************************************************************
                bool containerUnmount(void);
                // *****************************************************************************


            protected:
                // *****************************************************************************
                bool isMounted;
                // *****************************************************************************
                std::string containerName;
                // *****************************************************************************
                unsigned long long containerSize;
                // *****************************************************************************
                bool containerCreate(void);
                // *****************************************************************************
                std::fstream containerfile;
                // *****************************************************************************
            };
        }
    }
}
